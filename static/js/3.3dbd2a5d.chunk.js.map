{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","postsBlock","posts","item","React","Component","ProfileStatusHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","EditeMode","updateStatus","react_default","a","createElement","onChange","e","currentTarget","value","autoFocus","onBlur","onDoubleClick","ProfileInfo","profile","className","s","src","photos","large","alt","ProfileStatusHooks_ProfileStatusHooks","Preloader","Post","message","likesCount","MyPosts","memo","console","log","postsElements","map","p","MyPosts_Post_Post","key","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength","maxLengthCreater","reduxForm","form","handleSubmit","Field","component","TextArea","placeholder","validate","name","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","assign","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.3dbd2a5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__OCVwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__14cb_\",\"posts\":\"MyPosts_posts__1bGHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3A0Bu\"};","import React from 'react';\r\n\r\nexport class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    EditeMode = () => {\r\n        this.setState({editMode: !this.state.editMode});\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({status: e.currentTarget.value});\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.state !== this.props.state)\r\n            this.setState({status: this.props.status});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {!this.state.editMode ?\r\n                <div>\r\n                    <span onDoubleClick={this.EditeMode}>{this.props.status || \"No STATUS\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={this.EditeMode.bind(this)}\r\n                        value={this.state.status}\r\n                />\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const ProfileStatusHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n    const EditeMode = () => {\r\n        setEditMode(!editMode);\r\n        props.updateStatus(status);\r\n\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode ?\r\n                <div>\r\n                    <span onDoubleClick={EditeMode}>{props.status || \"No STATUS\"}</span>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={EditeMode}\r\n                        value={status}\r\n                    />\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\"\r\nimport { ProfileStatusHooks } from './ProfileStatusHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt=\"sosi\"  />\r\n                <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cdn.pixabay.com/photo/2016/11/29/09/42/camera-1868773_1280.jpg' alt='null' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { maxLengthCreater } from '../../../utils/Validators/validators';\r\nimport { TextArea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    // shouldComponentUpdate(nextProps, nextStatus) {\r\n    //     return nextProps !== this.props || nextStatus !== this.state;\r\n    // }\r\n    console.log(\"hi\")\r\n    let postsElements =\r\n        props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength = maxLengthCreater(100);\r\n\r\nconst addNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field\r\n                component={TextArea}\r\n                placeholder=\"Post message\"\r\n                validate={[maxLength]}\r\n                name=\"newPostText\"\r\n            />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: \"profileAddNewPost\" })(addNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authUserId;\n            if (!userId)\n                this.props.history.push('/login')\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId)\n\n    }\n\n\n    render() {\n        return (\n            <Profile\n                {...this.props}\n                status={this.props.status}\n                profile={this.props.profile}\n                updateStatus={this.props.updateStatus}\n            />\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter\n)(ProfileContainer);;"],"sourceRoot":""}